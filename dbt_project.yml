#
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'RRProject_jaffleshop'
version: '1.8'
config-version: 2

quoting:
  database: false
  schema: false
  identifier: false

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

query-comment:
  comment: "comment {{ dbt_version }}"
  append: true

vars:
  data_source: vci
  backfill_config: {'is_load_days': True, 'is_start_end_date': False, 'load_dates': ['2024-05-01', '2024-05-02'], 'start_date': '2024-05-01', 'end_date': '2024-05-10', 'is_cleanup_meta_current_load': True}

seeds:
  +persist_docs:
    columns: true
    relation: true
  +schema: seeds # if in root folder, put it into seeds
  +tags: seed
  cats:
    +schema: odi_cats

models:
 # RRProject_jaffleshop:
  bronze:
     # +required_tests: {"unique.*|not_null.*": 2}
    core:
       # +required_tests: {"relationship.*": 1}
      +schema: "{{ env_var('DBT_RR_SCHEMA') }}"
      +transient: false
      +materialized: table
    +access: public
  silver:
    +access: public
    +schema: "{{ env_var('DBT_RR_TGT_SCHEMA') }}"
    +materialized: view
    +tags: ["silver", "modeling_layer:intermediate"]
flags:
  require_generic_test_arguments_property: true